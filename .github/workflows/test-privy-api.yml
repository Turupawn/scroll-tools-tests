name: Test Privy API Integration

on:
  push:
    branches: [ main, master, develop ]
    paths:
      - 'apis/privy/**'
      - '.github/workflows/test-privy-api.yml'
  pull_request:
    branches: [ main, master, develop ]
    paths:
      - 'apis/privy/**'
      - '.github/workflows/test-privy-api.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.15]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: 'apis/privy/package-lock.json'
        
    - name: Install dependencies
      working-directory: ./apis/privy
      run: npm ci --legacy-peer-deps
      
    - name: Run linting
      working-directory: ./apis/privy
      run: |
        # Check if TypeScript is properly configured
        npx tsc --noEmit --skipLibCheck
        
    - name: Validate secrets
      run: |
        echo "üîç Debugging secrets..."
        echo "PRIVY_APP_ID length: ${#PRIVY_APP_ID}"
        echo "PRIVY_APP_SECRET length: ${#PRIVY_APP_SECRET}"
        echo "FUNDED_WALLET_PRIVATE_KEY length: ${#FUNDED_WALLET_PRIVATE_KEY}"
        
        if [ -z "${{ secrets.PRIVY_APP_ID }}" ]; then
          echo "‚ùå PRIVY_APP_ID secret is not set or empty"
          echo "Available secrets:"
          echo "  - PRIVY_APP_ID: '${{ secrets.PRIVY_APP_ID }}'"
          echo "  - PRIVY_APP_SECRET: '${{ secrets.PRIVY_APP_SECRET }}'"
          echo "  - FUNDED_WALLET_PRIVATE_KEY: '${{ secrets.FUNDED_WALLET_PRIVATE_KEY }}'"
          echo ""
          echo "üí° To fix this:"
          echo "1. Go to your repository Settings"
          echo "2. Click 'Secrets and variables' ‚Üí 'Actions'"
          echo "3. Add a new secret named exactly 'PRIVY_APP_ID'"
          echo "4. Set the value to your Privy App ID"
          exit 1
        fi
        if [ -z "${{ secrets.PRIVY_APP_SECRET }}" ]; then
          echo "‚ùå PRIVY_APP_SECRET secret is not set or empty"
          echo "üí° Add a secret named exactly 'PRIVY_APP_SECRET' with your Privy App Secret"
          exit 1
        fi
        if [ -z "${{ secrets.FUNDED_WALLET_PRIVATE_KEY }}" ]; then
          echo "‚ùå FUNDED_WALLET_PRIVATE_KEY secret is not set or empty"
          echo "üí° Add a secret named exactly 'FUNDED_WALLET_PRIVATE_KEY' with a funded wallet private key"
          exit 1
        fi
        echo "‚úÖ All required secrets are available"
        
    - name: Run tests
      working-directory: ./apis/privy
      run: npm test
      env:
        PRIVY_APP_ID: ${{ secrets.PRIVY_APP_ID }}
        PRIVY_APP_SECRET: ${{ secrets.PRIVY_APP_SECRET }}
        FUNDED_WALLET_PRIVATE_KEY: ${{ secrets.FUNDED_WALLET_PRIVATE_KEY }}
      continue-on-error: false
        
        
    - name: Comment PR with test results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const comment = `
          ## ‚úÖ Privy API Tests Completed
          
          Tests have been successfully executed for the Privy API integration.
          
          ### Test Details
          - **Node.js Version**: ${{ matrix.node-version }}
          - **OS**: Ubuntu Latest
          - **Test Framework**: Jest
          - **API Integration**: Privy Wallet Management
          - **Network**: Scroll Sepolia Testnet
          
          ### What was tested:
          - ‚úÖ Environment variables validation
          - ‚úÖ Wallet creation via Privy API
          - ‚úÖ Message signing functionality
          - ‚úÖ Transaction execution
          - ‚úÖ API connectivity
          - ‚úÖ Proper script exit handling
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
